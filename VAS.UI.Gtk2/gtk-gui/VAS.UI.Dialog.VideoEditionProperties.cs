
// This file has been generated by the GUI designer. Do not modify.
namespace VAS.UI.Dialog
{
	public partial class VideoEditionProperties
	{
		private global::Gtk.VBox vbox2;

		private global::Gtk.EventBox containerRegular;

		private global::Gtk.Alignment titleAlignment;

		private global::Gtk.Label labelTextTitle;

		private global::Gtk.Table table1;

		private global::Gtk.CheckButton audiocheckbutton;

		private global::Gtk.CheckButton descriptioncheckbutton;

		private global::Gtk.ComboBox formatcombobox;

		private global::Gtk.Label label1;

		private global::Gtk.Label label2;

		private global::Gtk.Label label3;

		private global::Gtk.ComboBox qualitycombobox;

		private global::Gtk.ComboBox sizecombobox;

		private global::Gtk.CheckButton splitfilesbutton;

		private global::Gtk.CheckButton watermarkcheckbutton;

		private global::Gtk.Label watermarkLabel;

		private global::VAS.UI.UI.Component.ImagePreviewWidget watermarkSelector;

		private global::Gtk.HBox filebox;

		private global::Gtk.Label filenamelabel;

		private global::VAS.UI.Component.MediaFileChooser mediafilechooser1;

		private global::Gtk.HBox dirbox;

		private global::Gtk.Label directorynamelabel1;

		private global::VAS.UI.Component.MediaFileChooser mediafilechooser2;

		private global::Gtk.Button buttonCancel;

		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget VAS.UI.Dialog.VideoEditionProperties
			this.Name = "VAS.UI.Dialog.VideoEditionProperties";
			this.Title = global::VAS.Core.Catalog.GetString (" ");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.Resizable = false;
			this.Gravity = ((global::Gdk.Gravity)(5));
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child VAS.UI.Dialog.VideoEditionProperties.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 10;
			// Container child vbox2.Gtk.Box+BoxChild
			this.containerRegular = new global::Gtk.EventBox ();
			this.containerRegular.Name = "containerRegular";
			// Container child containerRegular.Gtk.Container+ContainerChild
			this.titleAlignment = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.titleAlignment.Name = "titleAlignment";
			this.titleAlignment.LeftPadding = ((uint)(10));
			this.titleAlignment.TopPadding = ((uint)(10));
			this.titleAlignment.BottomPadding = ((uint)(10));
			// Container child titleAlignment.Gtk.Container+ContainerChild
			this.labelTextTitle = new global::Gtk.Label ();
			this.labelTextTitle.WidthRequest = 200;
			this.labelTextTitle.HeightRequest = 20;
			this.labelTextTitle.Name = "labelTextTitle";
			this.labelTextTitle.Xalign = 0F;
			this.labelTextTitle.LabelProp = global::VAS.Core.Catalog.GetString ("Video Properties");
			this.titleAlignment.Add (this.labelTextTitle);
			this.containerRegular.Add (this.titleAlignment);
			this.vbox2.Add (this.containerRegular);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.containerRegular]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(6)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(10));
			this.table1.ColumnSpacing = ((uint)(35));
			// Container child table1.Gtk.Table+TableChild
			this.audiocheckbutton = new global::Gtk.CheckButton ();
			this.audiocheckbutton.CanFocus = true;
			this.audiocheckbutton.Name = "audiocheckbutton";
			this.audiocheckbutton.Label = global::VAS.Core.Catalog.GetString ("Enable audio");
			this.audiocheckbutton.DrawIndicator = true;
			this.audiocheckbutton.UseUnderline = true;
			this.table1.Add (this.audiocheckbutton);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.audiocheckbutton]));
			w5.TopAttach = ((uint)(3));
			w5.BottomAttach = ((uint)(4));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XPadding = ((uint)(5));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.descriptioncheckbutton = new global::Gtk.CheckButton ();
			this.descriptioncheckbutton.CanFocus = true;
			this.descriptioncheckbutton.Name = "descriptioncheckbutton";
			this.descriptioncheckbutton.Label = global::VAS.Core.Catalog.GetString ("Enable title overlay");
			this.descriptioncheckbutton.DrawIndicator = true;
			this.descriptioncheckbutton.UseUnderline = true;
			this.descriptioncheckbutton.Xalign = 0F;
			this.table1.Add (this.descriptioncheckbutton);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.descriptioncheckbutton]));
			w6.TopAttach = ((uint)(3));
			w6.BottomAttach = ((uint)(4));
			w6.XPadding = ((uint)(10));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.formatcombobox = global::Gtk.ComboBox.NewText ();
			this.formatcombobox.Name = "formatcombobox";
			this.table1.Add (this.formatcombobox);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.formatcombobox]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XPadding = ((uint)(5));
			w7.XOptions = ((global::Gtk.AttachOptions)(6));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::VAS.Core.Catalog.GetString ("Quality:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w8.XPadding = ((uint)(10));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 0F;
			this.label2.LabelProp = global::VAS.Core.Catalog.GetString ("Image format: ");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(2));
			w9.XPadding = ((uint)(10));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.Xalign = 0F;
			this.label3.LabelProp = global::VAS.Core.Catalog.GetString ("Encoding Format:");
			this.table1.Add (this.label3);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.label3]));
			w10.TopAttach = ((uint)(2));
			w10.BottomAttach = ((uint)(3));
			w10.XPadding = ((uint)(10));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.qualitycombobox = global::Gtk.ComboBox.NewText ();
			this.qualitycombobox.Name = "qualitycombobox";
			this.table1.Add (this.qualitycombobox);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.qualitycombobox]));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.XPadding = ((uint)(5));
			w11.XOptions = ((global::Gtk.AttachOptions)(6));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.sizecombobox = global::Gtk.ComboBox.NewText ();
			this.sizecombobox.Name = "sizecombobox";
			this.table1.Add (this.sizecombobox);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.sizecombobox]));
			w12.TopAttach = ((uint)(1));
			w12.BottomAttach = ((uint)(2));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.XPadding = ((uint)(5));
			w12.XOptions = ((global::Gtk.AttachOptions)(6));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.splitfilesbutton = new global::Gtk.CheckButton ();
			this.splitfilesbutton.CanFocus = true;
			this.splitfilesbutton.Name = "splitfilesbutton";
			this.splitfilesbutton.Label = global::VAS.Core.Catalog.GetString ("Export one file per element in playlist");
			this.splitfilesbutton.DrawIndicator = true;
			this.splitfilesbutton.UseUnderline = true;
			this.splitfilesbutton.Xalign = 0F;
			this.table1.Add (this.splitfilesbutton);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.splitfilesbutton]));
			w13.TopAttach = ((uint)(4));
			w13.BottomAttach = ((uint)(5));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XPadding = ((uint)(5));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.watermarkcheckbutton = new global::Gtk.CheckButton ();
			this.watermarkcheckbutton.CanFocus = true;
			this.watermarkcheckbutton.Name = "watermarkcheckbutton";
			this.watermarkcheckbutton.Label = global::VAS.Core.Catalog.GetString ("Add watermark");
			this.watermarkcheckbutton.Active = true;
			this.watermarkcheckbutton.DrawIndicator = true;
			this.watermarkcheckbutton.UseUnderline = true;
			this.watermarkcheckbutton.Xalign = 0F;
			this.table1.Add (this.watermarkcheckbutton);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.watermarkcheckbutton]));
			w14.TopAttach = ((uint)(4));
			w14.BottomAttach = ((uint)(5));
			w14.XPadding = ((uint)(10));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.watermarkLabel = new global::Gtk.Label ();
			this.watermarkLabel.Name = "watermarkLabel";
			this.watermarkLabel.Xalign = 0F;
			this.watermarkLabel.Yalign = 0F;
			this.watermarkLabel.LabelProp = global::VAS.Core.Catalog.GetString ("Watermark:");
			this.table1.Add (this.watermarkLabel);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1 [this.watermarkLabel]));
			w15.TopAttach = ((uint)(5));
			w15.BottomAttach = ((uint)(6));
			w15.XPadding = ((uint)(10));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.watermarkSelector = new global::VAS.UI.UI.Component.ImagePreviewWidget ();
			this.watermarkSelector.Events = ((global::Gdk.EventMask)(256));
			this.watermarkSelector.Name = "watermarkSelector";
			this.table1.Add (this.watermarkSelector);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1 [this.watermarkSelector]));
			w16.TopAttach = ((uint)(5));
			w16.BottomAttach = ((uint)(6));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.XPadding = ((uint)(10));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox2.Add (this.table1);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.table1]));
			w17.Position = 1;
			w17.Expand = false;
			w17.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.filebox = new global::Gtk.HBox ();
			this.filebox.Name = "filebox";
			this.filebox.Spacing = 6;
			// Container child filebox.Gtk.Box+BoxChild
			this.filenamelabel = new global::Gtk.Label ();
			this.filenamelabel.Name = "filenamelabel";
			this.filenamelabel.Xpad = 10;
			this.filenamelabel.Xalign = 1F;
			this.filenamelabel.LabelProp = global::VAS.Core.Catalog.GetString ("File name: ");
			this.filebox.Add (this.filenamelabel);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.filebox [this.filenamelabel]));
			w18.Position = 0;
			w18.Expand = false;
			// Container child filebox.Gtk.Box+BoxChild
			this.mediafilechooser1 = new global::VAS.UI.Component.MediaFileChooser ();
			this.mediafilechooser1.Events = ((global::Gdk.EventMask)(256));
			this.mediafilechooser1.Name = "mediafilechooser1";
			this.filebox.Add (this.mediafilechooser1);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.filebox [this.mediafilechooser1]));
			w19.Position = 1;
			w19.Padding = ((uint)(5));
			this.vbox2.Add (this.filebox);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.filebox]));
			w20.Position = 2;
			w20.Expand = false;
			w20.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.dirbox = new global::Gtk.HBox ();
			this.dirbox.Name = "dirbox";
			this.dirbox.Spacing = 6;
			// Container child dirbox.Gtk.Box+BoxChild
			this.directorynamelabel1 = new global::Gtk.Label ();
			this.directorynamelabel1.Name = "directorynamelabel1";
			this.directorynamelabel1.Xpad = 10;
			this.directorynamelabel1.Xalign = 1F;
			this.directorynamelabel1.LabelProp = global::VAS.Core.Catalog.GetString ("Directory name: ");
			this.dirbox.Add (this.directorynamelabel1);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.dirbox [this.directorynamelabel1]));
			w21.Position = 0;
			w21.Expand = false;
			// Container child dirbox.Gtk.Box+BoxChild
			this.mediafilechooser2 = new global::VAS.UI.Component.MediaFileChooser ();
			this.mediafilechooser2.Events = ((global::Gdk.EventMask)(256));
			this.mediafilechooser2.Name = "mediafilechooser2";
			this.dirbox.Add (this.mediafilechooser2);
			global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.dirbox [this.mediafilechooser2]));
			w22.Position = 1;
			w22.Padding = ((uint)(5));
			this.vbox2.Add (this.dirbox);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.dirbox]));
			w23.Position = 3;
			w23.Expand = false;
			w23.Fill = false;
			w1.Add (this.vbox2);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(w1 [this.vbox2]));
			w24.Position = 0;
			w24.Expand = false;
			w24.Fill = false;
			// Internal child VAS.UI.Dialog.VideoEditionProperties.ActionArea
			global::Gtk.HButtonBox w25 = this.ActionArea;
			w25.Name = "dialog1_ActionArea";
			w25.Spacing = 6;
			w25.BorderWidth = ((uint)(5));
			w25.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w26 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w25 [this.buttonCancel]));
			w26.Expand = false;
			w26.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			w25.Add (this.buttonOk);
			global::Gtk.ButtonBox.ButtonBoxChild w27 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w25 [this.buttonOk]));
			w27.Position = 1;
			w27.Expand = false;
			w27.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 567;
			this.DefaultHeight = 494;
			this.dirbox.Hide ();
			this.Show ();
			this.splitfilesbutton.Clicked += new global::System.EventHandler (this.OnSplitfilesbuttonClicked);
			this.buttonOk.Clicked += new global::System.EventHandler (this.OnButtonOkClicked);
		}
	}
}
